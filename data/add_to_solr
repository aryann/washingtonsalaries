#!/usr/bin/env python
"""
A command-line tool for adding Washington state employee salary
data[1] to a Solr installation.

This tool assumes that the data file is a CSV file with the following
columns: agency title, employee, job title, 2010 salary, 2011 salary,
2012 salary.

[1] Available from http://fiscal.wa.gov/Salaries.aspx.
"""

import csv
import json
import logging
import sys
import urllib2

BATCH_SIZE = 100
COLS = ['agency', 'name', 'title', '2010_salary', '2011_salary', '2012_salary']
SOLR_URL = 'http://localhost:8983/solr/update/'


def post_to_solr(buffer):
    logging.info('Sending %s records to Solr...', len(buffer))
    req = urllib2.Request(
        SOLR_URL,
        data=json.dumps(buffer),
        headers={'Content-type': 'application/json'})
    resp = urllib2.urlopen(req)
    if resp.getcode() != 200:
        logging.error('Response was not OK: %s', resp.info())
        sys.exit(1)
    logging.info('Done with response code %s.', resp.getcode())


if __name__ == '__main__':
    logging.getLogger().setLevel(logging.INFO)

    if len(sys.argv) < 2:
        logging.error('Please provide a file name.')
        sys.exit(1)

    lines_to_process = int(sys.argv[2]) if len(sys.argv) == 3 else None

    buffer = []

    with open(sys.argv[1]) as f:
        reader = csv.reader(f, delimiter=',', quotechar='"')
        reader.next()  # Skips the header.

        line = 0
        for row in reader:
            if not row:
                continue

            assert len(row) == len(COLS), (
                'Found malformed data on line {0}: {1}'.format(line, row))

            line += 1

            # Converts the last three columns to ints.
            for i in xrange(3):
                row[-1 - i] = int(row[-1 - i].replace(',', ''))

            data = dict(zip(COLS, row))
            data['id'] = line
            buffer.append(data)

            if len(buffer) >= BATCH_SIZE:
                post_to_solr(buffer)
                buffer = []

            if lines_to_process is not None and line >= lines_to_process:
                break

    if buffer:
        post_to_solr(buffer)

